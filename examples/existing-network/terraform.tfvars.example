# ================================================================
# Immich with Existing Network - Example Configuration
# ================================================================
# This example shows how to deploy Immich using existing Hetzner Cloud
# network infrastructure instead of creating new networking resources.

# ================================================================
# REQUIRED: Hetzner Cloud Configuration
# ================================================================

hcloud_token = "YOUR_HETZNER_CLOUD_TOKEN_HERE"

ssh_public_keys = [
  "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAI... your-key-here"
]

# ================================================================
# REQUIRED: S3-Compatible Storage Configuration
# ================================================================

s3_access_key_id     = "YOUR_S3_ACCESS_KEY_ID_HERE"
s3_secret_access_key = "YOUR_S3_SECRET_ACCESS_KEY_HERE"
s3_bucket_name       = "your-family-photos-2024"

# ================================================================
# REQUIRED: Existing Network Configuration
# ================================================================

# Find your network ID in Hetzner Cloud Console -> Networks
existing_network_id = "12345"

# Note: Subnet selection is handled automatically within the network

# Optional: Specify server private IP (auto-assigned if not specified)
# Must be within the subnet's IP range
server_private_ip = "10.0.1.100"

# ================================================================
# OPTIONAL: Customization
# ================================================================

project_name = "immich-existing-net"
server_location = "nbg1"
domain_name = ""
admin_email = "admin@example.com"

# SECURITY: Restrict SSH access to your IP only
allowed_ssh_ips = ["0.0.0.0/0"]  # Change to your IP/32

s3_region = "us-west-000"
s3_endpoint = ""

# ================================================================
# OPTIONAL: Server and Firewall Configuration
# ================================================================

# Server type (cx22 recommended for families - 2 vCPU, 8GB RAM)
server_type = "cx22"

# Firewall access control (SECURITY: Restrict these IPs!)
allowed_http_ips = ["0.0.0.0/0", "::/0"]
allowed_https_ips = ["0.0.0.0/0", "::/0"]
allowed_immich_ips = ["0.0.0.0/0", "::/0"]

# Resource labels for organization
resource_labels = {
  environment = "production"
  managed_by  = "terraform"
  component   = "immich"
  network     = "existing"
}

# ================================================================
# SETUP INSTRUCTIONS
# ================================================================

# 1. IDENTIFY EXISTING NETWORK:
#    - Go to Hetzner Cloud Console -> Networks
#    - Find your existing network and note its ID
#    - Click on the network to see subnet details and IDs
#    - Note available IP ranges for server placement

# 2. VERIFY NETWORK COMPATIBILITY:
#    - Ensure the network is in the same location as your server
#    - Check that there's available IP space in the subnet
#    - Verify firewall rules allow the required ports (22, 80, 443, 2283)

# 3. CONFIGURATION:
#    - Set existing_network_id to your network's ID
#    - Optionally set existing_subnet_id (uses first subnet if not specified)
#    - Optionally set server_private_ip (auto-assigned if not specified)

# 4. DEPLOYMENT:
#    terraform init
#    terraform validate
#    terraform plan
#    terraform apply

# ================================================================
# NETWORK REQUIREMENTS
# ================================================================

# Your existing network should meet these requirements:
# - Location: Same as server_location variable
# - Subnet: Available IP addresses for server assignment
# - Firewall: Allow inbound traffic on ports 22, 80, 443, 2283
# - DNS: Optional - configure A record for domain_name if using custom domain

# ================================================================
# BENEFITS OF USING EXISTING NETWORK
# ================================================================

# ✅ Integration with existing infrastructure
# ✅ Shared network resources with other services
# ✅ Centralized network management
# ✅ Consistent IP addressing schemes
# ✅ Existing firewall and security policies
# ✅ Cost savings (no additional network resources)